name: StriGo Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      memcached:
        image: memcached:alpine
        ports:
          - 11211:11211

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.3"
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run Unit Tests with Coverage
        run: |
          mkdir -p coverage
          go test -v -race ./tests/... -coverprofile=coverage/coverage.out -covermode=atomic -timeout 10m
          COVERAGE=$(go tool cover -func=coverage/coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+')
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
          go tool cover -html=coverage/coverage.out -o coverage/coverage.html
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          MEMCACHED_HOST: localhost
          MEMCACHED_PORT: 11211
        continue-on-error: true

      - name: Update Coverage Badge
        if: github.ref == 'refs/heads/main'
        run: |
          COVERAGE_INT=${COVERAGE%.*}
          COLOR="red"
          if [ $COVERAGE_INT -gt 80 ]; then
            COLOR="green"
          elif [ $COVERAGE_INT -gt 60 ]; then
            COLOR="yellow"
          fi
          curl -X POST "https://img.shields.io/badge/coverage-${COVERAGE}%25-${COLOR}" > coverage/badge.svg

      - name: Store coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage/coverage.out
            coverage/coverage.html
            coverage/badge.svg
          retention-days: 14

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run integration tests with Docker
        run: |
          docker compose -f docker/docker-compose.yml run --rm tests
        continue-on-error: true

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.3"

      - name: Run performance tests
        run: |
          go test -v ./tests/... -run TestPerformance -timeout 30m
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          MEMCACHED_HOST: localhost
          MEMCACHED_PORT: 11211
